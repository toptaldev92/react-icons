name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn --frozen-lockfile
      if: steps.restore-cache.outputs.cache-hit != 'true'
    - name: Build Packages
      run: BASE_PATH=/react-icons ./build-script.sh
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./packages/preview/out
      if: github.ref == 'refs/heads/master'
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "packages/react-icons/react-icons-*.tgz"
        bodyFile: "packages/react-icons/VERSIONS"
        token: ${{ secrets.GITHUB_TOKEN }}
      if: contains(github.ref, 'tags/')
